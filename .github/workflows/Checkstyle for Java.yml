# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

  name: Checkstyle for Java
  # You may pin to the exact commit or the version.
  # uses: dbelyaev/action-checkstyle@2273c31897c0d6788a841a0926d871ad716ddab5
  uses: dbelyaev/action-checkstyle@v0.5.1
  with:
    # GITHUB_TOKEN
    github_token: # optional, default is ${{ github.token }}
    # Working directory relative to the root directory.
    workdir: # optional, default is .
    # Report level for reviewdog [info, warning, error]
    level: # optional, default is info
    # Reporter of reviewdog command [github-pr-check, github-pr-review].
    reporter: # optional, default is github-pr-check
    # Filtering mode for the reviewdog command [added, diff_context, file, nofilter]. Default is added.

    filter_mode: # optional, default is added
    # Exit code for reviewdog when errors are found [true, false]
Default is `false`.

    fail_on_error: # optional, default is false
    # Additional reviewdog flags
    reviewdog_flags: # optional, default is 
    # Checkstyle configuration specifies which ruleset to apply during scan.
There are two built-in configurations in checkstyle: [google_checks.xml, sun_checks.xml].
google_checks.xml configures Checkstyle for the Google coding conventions (https://google.github.io/styleguide/javaguide.html)
sun_checks.xml configures Checkstyle for the Sun coding conventions (https://www.oracle.com/java/technologies/javase/codeconventions-contents.html)

    checkstyle_config: # default is google_checks.xml
    # Checkstyle version to be used during analysis.
For a list of available version numbers go to [Checkstyle release page](https://github.com/checkstyle/checkstyle/releases/).

    checkstyle_version: # optional, default is 9.2
